{#
This file is based on the Redactor field settings template file, from the Redactor plugin version 3.0.2, by Pixel & Tonic, Inc.
https://github.com/craftcms/redactor/blob/3.0.2/src/templates/_field_settings.html
The Redactor plugin is released under the terms of the MIT License, a copy of which is included below.
https://github.com/craftcms/redactor/blob/3.0.2/LICENSE.md

The MIT License (MIT)

Copyright (c) Pixel & Tonic, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
#}

{% import '_includes/forms' as forms %}

{% set configInput %}
    <div class="flex">
        {{ forms.select({
            name: 'configSelectionMode',
            options: [
                { label: 'Choose a config file'|t('tinymce'), value: 'choose' },
                { label: 'Enter a custom config'|t('tinymce'), value: 'manual' }
            ],
            value: field.configSelectionMode,
            toggle: true,
            targetPrefix: '.csm-'
        }) }}

        {{ forms.select({
            id: 'tinymceConfig',
            name: 'tinymceConfig',
            class: ['csm-choose', field.configSelectionMode == 'manual' ? 'hidden']|filter,
            options: tinymceConfigOptions,
            value: field.tinymceConfig
        }) }}
    </div>
{% endset %}

{{ forms.field({
    label: 'TinyMCE Config'|t('tinymce'),
    instructions: 'You can save custom TinyMCE configs as `.json` files in `config/tinymce/`, or you can enter a custom config.'|t('tinymce')
        ~ ' <a href="https://www.tiny.cloud/docs/tinymce/6/" rel="noopener" target="_blank" class="go">' ~ 'View available settings'|t('tinymce') ~ '</a>',
    id: 'config',
    required: true,
}, configInput) }}

{{ forms.textareaField({
    label: 'Custom TinyMCE Config'|t('tinymce'),
    instructions: 'The config must be entered as valid JSON.'|t('tinymce'),
    fieldClass: ['csm-manual', field.configSelectionMode == 'choose' ? 'hidden']|filter,
    class: ['code', 'ltr'],
    name: 'manualConfig',
    value: field.manualConfig,
    rows: 10,
    cols: 50,
    errors: field.getErrors('manualConfig'),
}) }}

{{ forms.checkboxSelectField({
    id: 'availableVolumes',
    name: 'availableVolumes',
    label: 'Available Volumes'|t('tinymce'),
    instructions: 'The volumes that should be available when selecting assets (if the selected config has an Image or File button).'|t('tinymce'),
    options: volumeOptions,
    values: field.availableVolumes,
    showAllOption: volumeOptions is not empty,
}) }}

{{ forms.checkboxSelectField({
    id: 'availableTransforms',
    name: 'availableTransforms',
    label: 'Available Transforms'|t('tinymce'),
    instructions: 'The transforms that should be available when inserting images.'|t('tinymce'),
    options: transformOptions,
    values: field.availableTransforms,
    showAllOption: transformOptions is not empty,
}) }}

{{ forms.selectField({
    id: 'defaultTransform',
    name: 'defaultTransform',
    label: 'Default Transform'|t('tinymce'),
    instructions: 'The default transform that should be applied when inserting images.'|t('tinymce'),
    options: defaultTransformOptions,
    value: field.defaultTransform,
}) }}

<hr>
<a class="fieldtoggle" data-target="advanced">{{ "Advanced"|t('tinymce') }}</a>
<div id="advanced" class="hidden">
    <div class="field">
        <div class="heading">
            <label>{{ 'Clean up HTML'|t('tinymce') }}</label>
            <div class="instructions">
                {{ 'The cleanup actions that should be executed on save.'|t('tinymce') }}
            </div>
        </div>

        <div>
            {{ forms.checkbox({
                label: 'Remove inline styles'|t('tinymce'),
                id: 'removeInlineStyles',
                name: 'removeInlineStyles',
                checked: field.removeInlineStyles,
            }) }}
        </div>

        <div>
            {{ forms.checkbox({
                label: 'Remove empty tags'|t('tinymce'),
                id: 'removeEmptyTags',
                name: 'removeEmptyTags',
                checked: field.removeEmptyTags,
            }) }}
        </div>

        <div>
            {{ forms.checkbox({
                label: 'Replace non-breaking spaces with regular spaces'|t('tinymce'),
                id: 'removeNbsp',
                name: 'removeNbsp',
                checked: field.removeNbsp,
            }) }}
        </div>
    </div>

    {{ forms.checkboxField({
        label: 'Purify HTML'|t('tinymce'),
        instructions: 'Removes any potentially-malicious code on save, by running the submitted data through <a href="http://htmlpurifier.org/" rel="noopener" target="_blank">HTML Purifier</a>.'|t('tinymce'),
        warning: 'Disable this at your own risk!'|t('tinymce'),
        id: 'purifyHtml',
        name: 'purifyHtml',
        checked: field.purifyHtml,
        toggle: 'purifier-config-container',
    }) }}

    <div id="purifier-config-container"{% if not field.purifyHtml %} class="hidden"{% endif %}>
        {{ forms.selectField({
            label: 'HTML Purifier Config'|t('tinymce'),
            instructions: 'You can save custom {name} configs as {ext} files in {path}.'|t('tinymce', {
                name: 'HTML Purifier Config',
                ext: '`.json`',
                path: '`config/htmlpurifier/`',
            }) ~ ' <a href="http://htmlpurifier.org/live/configdoc/plain.html" rel="noopener" target="_blank">' ~ 'View available settings'|t('tinymce') ~ '</a>',
            id: 'purifierConfig',
            name: 'purifierConfig',
            options: purifierConfigOptions,
            value: field.purifierConfig,
        }) }}
    </div>
</div>
